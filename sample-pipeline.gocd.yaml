format_version: 2
environments:
  pre-qa:
    pipelines:
      - deploy-app-via-zip
      - deploy-app-to-kubernetes
pipelines:
  deploy-app-via-zip:
    group: node-js-pipeline
    lock_behavior: unlockWhenFinished
    environment_variables:
      PROJECT_ID: demo
    materials:
      configuration:
        pipeline: configuration
        stage: build
      nodejs:
        git: https://github.com/stellawi/demo-node-js.git
      config-repo:
        git: https://github.com/stellawi/gocd-file-configuration.git
    stages:
      - verify:
          fetch_materials: true
          keep_artifacts: true
          clean_workspace: true
          jobs:
            verification:
              elastic_profile_id: demo-app
              tasks:
                - fetch:
                    pipeline: configuration
                    stage: build
                    job: verification
                    source: configuration
                - exec:
                    run_if: passed
                    command: bash
                    arguments:
                    - -cl
                    - chmod +x configuration/verify.sh && configuration/verify.sh ./configuration-zip.json
      - pre-deploy:
          fetch_materials: true
          keep_artifacts: true
          clean_workspace: true
          jobs:
            get-zip:
              resources: 
                - ip-172-31-19-107.ap-southeast-1.compute.internal
              tasks:
                - exec:
                    run_if: passed
                    command: bash
                    arguments:
                    - -cl
                    - ./pre-deploy.sh
              artifacts:
                - build:
                    source: Archive.zip
                    destination: zip-files/
      - deploy:
          environment_variables:
            CHART_NAME: demo-app-automation
            CHART_PATH: demo-node/demo-node
            VALUES_FILE_PATH: demo-node/values.yaml
            NAMESPACE: automation
          fetch_materials: true
          keep_artifacts: true
          clean_workspace: true
          jobs:
            unzip:
              resources: 
                - ip-172-31-19-107.ap-southeast-1.compute.internal
              tasks:
                - fetch:
                    pipeline: deploy-app-via-zip
                    stage: pre-deploy
                    job: get-zip
                    source: zip-files
                - exec:
                    run_if: passed
                    command: bash
                    arguments:
                    - -cl
                    - ./deploy.sh zip-files/Archive
                - exec:
                    run_if: passed
                    command: bash
                    arguments:
                    - -cl
                    - echo "sample-nodejs:${GO_PIPELINE_LABEL}" > sample-nodejs-version.txt
              artifacts:
                - build:
                    source: sample-nodejs-version.txt
                    destination: nodejs-version/
      - post-deploy:
          fetch_materials: true
          keep_artifacts: true
          clean_workspace: true
          jobs:
            unzip:
              resources: 
                - ip-172-31-19-107.ap-southeast-1.compute.internal
              tasks:
                - exec:
                    run_if: passed
                    command: bash
                    arguments:
                    - -cl
                    - ./post-deploy.sh 
  deploy-app-to-kubernetes:
    group: node-js-pipeline
    lock_behavior: unlockWhenFinished
    environment_variables:
      PROJECT_ID: demo
    materials:
      configuration:
        pipeline: configuration
        stage: build
      nodejs:
        git: https://github.com/stellawi/demo-node-js.git
    stages:
      - verify:
          approval:
            type: manual
          fetch_materials: true
          keep_artifacts: true
          clean_workspace: true
          jobs:
            verification:
              elastic_profile_id: demo-app
              tasks:
                - fetch:
                    pipeline: configuration
                    stage: build
                    job: verification
                    source: configuration
                - exec:
                    run_if: passed
                    command: bash
                    arguments:
                    - -cl
                    - chmod +x configuration/verify.sh && configuration/verify.sh ./configuration-kubernetes.json
      - pre-deploy:
          environment_variables:
            DOCKER_REGISTRY_USERNAME: stellaw05
          secure_variables:
            DOCKER_REGISTRY_PASSWORD: AES:bqH9zh9v4hcOhWLC1uvP6g==:sY0BqMvFSHXnCTZW55PiaNGTpln1gR+k0QKJxx6zIQM=
          fetch_materials: true
          keep_artifacts: true
          clean_workspace: true
          jobs:
            deploy-to-docker-registry:
              elastic_profile_id: demo-app
              tasks:
                - exec:
                    run_if: passed
                    command: bash
                    arguments:
                    - -cl
                    - echo $DOCKER_REGISTRY_PASSWORD | docker login -u ${DOCKER_REGISTRY_USERNAME} --password-stdin
                - exec:
                    run_if: passed
                    command: bash
                    arguments:
                    - -cl
                    - ./build.sh
                - exec:
                    run_if: passed
                    command: bash
                    arguments:
                    - -cl
                    - ./pushToRegistry.sh
      - deploy:
          environment_variables:
            CHART_NAME: demo-app-automation
            CHART_PATH: demo-node/demo-node
            VALUES_FILE_PATH: demo-node/values.yaml
            NAMESPACE: automation
          fetch_materials: true
          keep_artifacts: true
          clean_workspace: true
          jobs:
            deploy-to-kubernetes:
              elastic_profile_id: demo-app
              tasks:
                - exec:
                    run_if: passed
                    command: bash
                    arguments:
                    - -cl
                    - export DOCKER_IMAGE_TAG=${GO_PIPELINE_LABEL} && export OPTIONS="image.tag=${DOCKER_IMAGE_TAG}" && ./install-upgrade-helm.sh
      - post-deploy:
          fetch_materials: true
          keep_artifacts: true
          clean_workspace: true
          jobs:
            unzip:
              elastic_profile_id: demo-app
              tasks:
                - exec:
                    run_if: passed
                    command: bash
                    arguments:
                    - -cl
                    - ./post-deploy.sh